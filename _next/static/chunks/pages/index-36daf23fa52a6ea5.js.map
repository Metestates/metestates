{"version":3,"file":"static/chunks/pages/index-36daf23fa52a6ea5.js","mappings":"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","sources":["webpack://_N_E/","webpack://_N_E/./src/config/app-config.ts","webpack://_N_E/./src/hooks/use-screen-dimensions.ts","webpack://_N_E/./src/hooks/use-mouse-coordinates.ts","webpack://_N_E/./src/hooks/use-mousewheel-scalable.ts","webpack://_N_E/./src/hooks/use-controlled-coordinate.ts","webpack://_N_E/./src/hooks/use-token-balance.ts","webpack://_N_E/./src/utils/address.ts","webpack://_N_E/./src/components/TokenBalance/TokenBalance.tsx","webpack://_N_E/./src/components/ConnectToWalletButton/ConnectToWalletButton.tsx","webpack://_N_E/./src/queries/getBlockData.ts","webpack://_N_E/./src/utils/parcel.ts","webpack://_N_E/./src/components/CanvasParcelGrid/CanvasParcelGrid.tsx","webpack://_N_E/./src/constants/DAOContractAddress.ts","webpack://_N_E/./src/components/ParcelDetails/ParcelDetails.tsx","webpack://_N_E/./src/pages/index.tsx","webpack://_N_E/./src/components/ConnectToWalletButton/ConnectToWalletButton.module.scss","webpack://_N_E/./src/components/TokenBalance/TokenBalance.module.scss"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return require(\"private-next-pages/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  ","import Coordinate from '../types/coordinate'\n\nexport interface IAppConfig {\n\tParcelPixelWidth: number;\n\tParcelPixelMinWidth: number;\n\tParcelPixelMaxWidth: number;\n\tParcelBlockWidth: number,\n\tParcelsPerQuery: number,\n\tOrigin: Coordinate;\n\tPanningStep: number;\n}\n\n// @NOTE(mzalla) To call `api.thegraph.com`, we can only fetch up to a maximum\n// of 1,000 items per query; by choosing a large parcel block size (30), we get\n// close to 1,000 parcels per block query without going over this limit;\nconst ParcelBlockWidth = 30\n\nconst AppConfig: IAppConfig = {\n\tParcelPixelWidth: 16,\n\tParcelPixelMinWidth: 4,\n\tParcelPixelMaxWidth: 80,\n\tParcelBlockWidth,\n\tParcelsPerQuery: ParcelBlockWidth * ParcelBlockWidth,\n\t// Origin: { x: 0, y: 0 },\n\tOrigin: { x: -0, y: 0 },\n\tPanningStep: 1,\n}\n\nexport default AppConfig\n","import * as React from 'react'\n\nimport Dimensions from '../types/dimensions'\n\ntype UseScreenDimensionsHookResult = Dimensions\n\nconst useScreenDimensions = (): UseScreenDimensionsHookResult => {\n\n\tconst [screenDimensions, setScreenDimensions] = React.useState<Dimensions>({\n\t\twidth: window.innerWidth,\n\t\theight: window.innerHeight,\n\t})\n\n\tReact.useEffect(() => {\n\n\t\tfunction onWindowResize() {\n\t\t\tsetScreenDimensions({\n\t\t\t\twidth: window.innerWidth,\n\t\t\t\theight: window.innerHeight,\n\t\t\t})\n\t\t}\n\n\t\twindow.addEventListener(`resize`, onWindowResize)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(`resize`, onWindowResize)\n\t\t}\n\n\t}, [])\n\n\treturn screenDimensions\n\n}\n\nexport default useScreenDimensions\n","import * as React from 'react'\n\nimport Coordinate from '../types/coordinate'\n\ntype UseMouseCoordinatesHookResult = Coordinate\n\nconst useMouseCoordinates = (): UseMouseCoordinatesHookResult => {\n\n\tconst [mouseCoordinates, setMouseCoordinates] = React.useState<Coordinate>({\n\t\tx: 0,\n\t\ty: 0,\n\t})\n\n\tReact.useEffect(() => {\n\n\t\tfunction onMousemove(e: MouseEvent) {\n\t\t\tsetMouseCoordinates({\n\t\t\t\tx: e.clientX,\n\t\t\t\ty: e.clientY,\n\t\t\t})\n\t\t}\n\n\t\twindow.addEventListener(`mousemove`, onMousemove)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(`mousemove`, onMousemove)\n\t\t}\n\n\t}, [])\n\n\treturn mouseCoordinates\n\n}\n\nexport default useMouseCoordinates\n","import * as React from 'react'\n\ninterface IUseMousewheelScalableOptions {\n\tdelta: number,\n\tminValue?: number,\n\tmaxValue?: number,\n}\n\nfunction clamp(\n\tvalue: number,\n\tmin: number = -Infinity,\n\tmax: number = Infinity): number\n{\n\treturn Math.max(\n\t\tmin || -Infinity,\n\t\tMath.min(value, max || Infinity)\n\t)\n}\n\nfunction useMousewheelScalable(\n\tinitialValue: number = 0,\n\toptions: IUseMousewheelScalableOptions = { delta: 1 })\n{\n\n\tconst [scalableValue, setScalableValue] = React.useState(initialValue)\n\n\tReact.useEffect(() => {\n\n\t\tfunction onMouseWheel(event: WheelEvent) {\n\n\t\t\tconst newValue = scalableValue + (event.deltaY < 0 ?\n\t\t\t\t-1 * options.delta :\n\t\t\t\toptions.delta)\n\n\t\t\tconst clampedValue = clamp(newValue, options.minValue, options.maxValue)\n\n\t\t\tsetScalableValue(clampedValue)\n\n\t\t}\n\n\t\twindow.addEventListener(`wheel`, onMouseWheel)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(`wheel`, onMouseWheel)\n\t\t}\n\n\t}, [\n\t\toptions.delta,\n\t\toptions.maxValue,\n\t\toptions.minValue,\n\t\tscalableValue,\n\t\tsetScalableValue,\n\t])\n\n\treturn scalableValue\n\n}\n\nexport default useMousewheelScalable\n","import * as React from 'react'\n\nimport Coordinate from '../types/coordinate'\n\nimport AppConfig from '../config/app-config'\n\nfunction useControlledCoordinate(coord: Coordinate = { x: 0, y: 0 }) {\n\n\tconst [coordinate, setCoordiante] = React.useState(coord)\n\n\tReact.useEffect(() => {\n\n\t\tfunction onKeydown(event: KeyboardEvent) {\n\t\t\tconst step = AppConfig.PanningStep;\n\t\t\tconst delta: Coordinate = { x: 0, y: 0 }\n\n\t\t\tswitch (event.key) {\n\t\t\t\tcase `ArrowUp`:\n\t\t\t\t\tdelta.y = step\n\t\t\t\t\tbreak;\n\t\t\t\tcase `ArrowDown`:\n\t\t\t\t\tdelta.y = -step\n\t\t\t\t\tbreak;\n\t\t\t\tcase `ArrowLeft`:\n\t\t\t\t\tdelta.x = -step\n\t\t\t\t\tbreak;\n\t\t\t\tcase `ArrowRight`:\n\t\t\t\t\tdelta.x = step\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tsetCoordiante({\n\t\t\t\tx: coordinate.x + delta.x,\n\t\t\t\ty: coordinate.y + delta.y,\n\t\t\t})\n\t\t}\n\n\t\twindow.addEventListener(`keydown`, onKeydown)\n\n\t\treturn () => {\n\t\t\twindow.removeEventListener(`keydown`, onKeydown)\n\t\t}\n\n\t}, [coordinate, setCoordiante])\n\n\treturn coordinate\n\n}\n\nexport default useControlledCoordinate\n","import { BigNumber } from '@ethersproject/bignumber'\nimport { Contract } from '@ethersproject/contracts'\n\nimport {\n\tERC20Interface,\n\tFalsy,\n\tuseCall,\n\tuseContractCall,\n} from '@usedapp/core'\n\ntype UseTokenBalanceHookResult = [\n\tBigNumber|undefined,\n\tError|undefined,\n\tboolean,\n]\n\nconst useTokenBalance = (\n\ttokenAddress: string,\n\taddress?: string): UseTokenBalanceHookResult =>\n{\n\n\tlet result;\n\n\t// result = useContractCall(\n\tresult = useCall(\n\t\taddress &&\n\t\t// {\n\t\t// \tabi: ERC20Interface,\n\t\t// \taddress: tokenAddress,\n\t\t// \tmethod: 'balanceOf',\n\t\t// \targs: [address],\n\t\t// }\n\t\t{\n\t\t\tcontract: new Contract(tokenAddress, ERC20Interface),\n\t\t\tmethod: 'balanceOf',\n\t\t\targs: [address],\n\t\t}\n\t)\n\n\tif(!address)\n\t{\n\t\treturn [undefined, undefined, true]\n\t}\n\n\tif(!result)\n\t{\n\t\treturn [undefined, undefined, false]\n\t}\n\n\tlet { value, error } = result\n\n\tif(error) {\n\t\treturn [undefined, error, false]\n\t}\n\n\tconst { balance } = value\n\n\treturn [balance, undefined, false]\n\n}\n\nexport default useTokenBalance\n","// See: https://github.com/MetaMask/metamask-extension/blob/develop/ui/helpers/utils/util.js#L207-L215\n\nconst TruncatedNameCharLimit = 11;\nconst TruncatedAddressStartChars = 5;\nconst TruncatedAddressEndChars = 4;\n\n// @TODO(mzalla) Replace with '@usedapp/core' utility;\nexport const shortenAddress = (\n\taddress: string = '') =>\n{\n\n\tif(address.length < TruncatedNameCharLimit) {\n\t\treturn address\n\t}\n\n\tlet [start, end] = [\n\t\taddress.slice(0, TruncatedAddressStartChars),\n\t\taddress.slice(-TruncatedAddressEndChars),\n\t]\n\n\treturn `${start}…${end}`\n\n}\n","import React, { FC } from 'react';\n\nimport { formatUnits } from '@ethersproject/units'\n\nimport Jazzicon, { jsNumberForAddress } from 'react-jazzicon'\n\nimport ITokenMetadata from '../../types/token';\n\nimport useTokenBalance from '../../hooks/use-token-balance'\n\nimport { shortenAddress } from '../../utils/address';\n\nimport styles from './TokenBalance.module.scss'\n\ntype TokenBalanceProps = {\n\ttoken: ITokenMetadata,\n\taddress: string,\n}\n\nconst TokenBalance: FC<TokenBalanceProps> = ({ token, address }) => {\n\n\tconst [balance, error, isLoading] = useTokenBalance(token.address, address)\n\n\tif(\n\t\tisLoading ||\n\t\t(\n\t\t\t!balance &&\n\t\t\t!error\n\t\t)\n\t) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Loading…</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tif(error) {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Error retreiving token balance: {error}</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\tlet formattedTokenBalance = formatUnits(balance!, token.decimals)\n\n\treturn (\n\t\t<div className={styles.TokenBalance}>\n\t\t\t<div className={styles.TokenBalanceWrapper}>\n\t\t\t\t<div className={styles.TokenBalanceLeft}>\n\t\t\t\t\t<div className={styles.TokenBalanceJazziconWrapper}>\n\t\t\t\t\t\t<Jazzicon diameter={40} seed={jsNumberForAddress(address)} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.TokenBalanceRight}>\n\t\t\t\t\t<span className={styles.TokenBalanceSpan}>{shortenAddress(address)}</span>\n\t\t\t\t\t{\n\t\t\t\t\t\tbalance &&\n\t\t\t\t\t\t<span className={styles.TokenBalanceSpan}>{formattedTokenBalance} {token.symbol}</span>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default TokenBalance;\n","import React, { FC } from 'react'\n\nimport {\n\tuseEthers,\n\tuseNotifications,\n} from '@usedapp/core'\n\nimport { Button } from '@chakra-ui/react'\n\nimport styles from './ConnectToWalletButton.module.scss'\n\ntype ConnectToWalletButtonProps = {}\n\nconst ConnectToWalletButton: FC<ConnectToWalletButtonProps> = () => {\n\n\tconst { activateBrowserWallet } = useEthers()\n\n\tconst { notifications } = useNotifications()\n\n\tconst connectWallet = React.useCallback(\n\t\t() => {\n\n\t\t\t(activateBrowserWallet() as any).then(() => {\n\t\t\t\tconsole.log(`Connected to a new browser wallet…`)\n\t\t\t})\n\n\t\t},\n\t\t[activateBrowserWallet]\n\t)\n\n\tReact.useEffect(\n\t\t() => {\n\t\t\tnotifications.map(n => {\n\t\t\t\tswitch(n.type) {\n\t\t\t\t\tcase `walletConnected`:\n\n\t\t\t\t\t\tlet addr = n.address\n\n\t\t\t\t\t\tconsole.log(`Connected to wallet with address ${addr}.`)\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.log(n)\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t})\n\t\t},\n\t\t[notifications]\n\t)\n\n\treturn (\n\t\t<Button className={styles.ConnectToWalletButton}\n\t\t\tcolorScheme='green'\n\t\t\tonClick={connectWallet}>\n\t\t\tConnect Wallet\n\t\t</Button>\n\t)\n\n}\n\nexport default ConnectToWalletButton\n","import { gql } from \"@apollo/client\";\n\n// See:\n//\n// https://thegraph.com/docs/developer/developer-faq#22-is-there-a-limit-\\\n//  to-how-many-objects-the-graph-can-return-per-query\n\nconst getBlockDataQuery = gql`\n\tquery GET_PARCEL_BLOCK(\n\t\t$first: Int,\n\t\t$xGte: BigInt\n\t\t$xLt: BigInt\n\t\t$yLte: BigInt\n\t\t$yGt: BigInt\n\t) {\n\t\tparcels(\n\t\t\tfirst: $first,\n\t\t\twhere: { x_gte: $xGte, x_lt: $xLt, y_lte: $yLte, y_gt: $yGt }\n\t\t) {\n\t\t\tid\n\t\t\ttokenId\n\t\t\towner {\n\t\t\t\taddress\n\t\t\t}\n\t\t\tx\n\t\t\ty\n\t\t\tdata {\n\t\t\t\tname\n\t\t\t\tdescription\n\t\t\t\tipns\n\t\t\t}\n\t\t\testate {\n\t\t\t\tid\n\t\t\t\ttokenId\n\t\t\t\towner {\n\t\t\t\t\taddress\n\t\t\t\t}\n\t\t\t\t# parcels\n\t\t\t}\n\t\t}\n\t}\n`\n\nexport default getBlockDataQuery\n","import Parcel from '../types/parcel'\n\nimport Color from '../types/color'\nimport Coordinate from '../types/coordinate'\n\nimport { DAOContractAddress } from '../constants/DAOContractAddress'\n\nimport { Block } from '../hooks/use-parcel-block'\n\nimport AppConfig from '../config/app-config'\n\nfunction address(parcel: Parcel) {\n\treturn (parcel.estate ? parcel.estate : parcel).owner.address\n}\n\nfunction short(address: string) {\n\treturn `${address.slice(0, 5)}…${address.slice(address.length - 4)}`\n}\n\nfunction getBlockCoordinate(\n\tx: number,\n\ty: number): Coordinate\n{\n\treturn {\n\t\t// x: Math.floor(x / AppConfig.ParcelBlockWidth),\n\t\t// y: Math.floor(y / AppConfig.ParcelBlockWidth),\n\t\tx: x - (x % AppConfig.ParcelBlockWidth),\n\t\ty: y - (y % AppConfig.ParcelBlockWidth),\n\t}\n}\n\nfunction findParcel(\n\tblock: Block,\n\tx: number,\n\ty: number): Parcel|undefined\n{\n\treturn block?.parcels.find(\n\t\tp => parseInt(p.x) === x && parseInt(p.y) === y\n\t)\n}\n\nfunction getParcelSaturation(\n\tparcel: Parcel,\n\tselectedParcel: Parcel|null): number\n{\n\tif(\n\t\tselectedParcel &&\n\t\thasSameOwner(parcel, selectedParcel) === false\n\t)\n\t{\n\t\treturn 0.05\n\t}\n\n\treturn 1.00\n}\n\nfunction getParcelColor(\n\tparcel: Parcel,\n\tselectedParcel: Parcel|null,\n\taddress: string): Color\n{\n\tif (address === DAOContractAddress) {\n\t\treturn [0, 0, 0, 255]\n\t}\n\n\t//    0            12           24           36\n\t// 0x 9a6ebe7e2a77 22f8200d0ffb 63a1f6406a0d 7dce\n\n\taddress = address.slice(2)\n\n\tlet r = parseInt(address.slice(0, 12), 16) % 256\n\tlet g = parseInt(address.slice(12, 24), 16) % 256\n\tlet b = parseInt(address.slice(24, 36), 16) % 256\n\tlet a = 255\n\n\treturn [r, g, b, a]\n}\n\nfunction hasSameOwner(\n\tparcel: Parcel,\n\tselectedParcel: Parcel): boolean\n{\n\n\tif (selectedParcel.estate || parcel.estate)\n\t{\n\t\tif(selectedParcel.estate && parcel.estate)\n\t\t{\n\t\t\tif(selectedParcel.estate.owner.address === parcel.estate.owner.address)\n\t\t\t{\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\telse if(selectedParcel.estate)\n\t\t{\n\t\t\tif(selectedParcel.estate.owner.address === parcel.owner.address)\n\t\t\t{\n\t\t\t\treturn true\n\t\t\t}\n\t\t}\n\t\telse if(selectedParcel.owner.address === parcel.estate?.owner.address)\n\t\t{\n\t\t\treturn true\n\t\t}\n\t} else if (parcel.owner.address === selectedParcel.owner.address) {\n\t\treturn true\n\t}\n\n\treturn false\n\n}\n\nexport {\n\taddress,\n\tshort,\n\tgetParcelSaturation,\n\tgetParcelColor,\n\thasSameOwner,\n\tgetBlockCoordinate,\n\tfindParcel,\n}\n","import React, { FC } from 'react';\n\nimport { ApolloClient, useApolloClient } from '@apollo/client';\n\nimport { css } from '@emotion/css';\n\nimport Color from '../../types/color';\nimport Parcel from '../../types/parcel';\nimport Coordinate from '../../types/coordinate';\nimport Dimensions from '../../types/dimensions';\n\nimport AppConfig from '../../config/app-config';\n\nimport getBlockDataQuery from '../../queries/getBlockData';\n\nimport { BlockDataQueryVariables, BlockDataResult } from '../../hooks/use-parcel-block';\n\nimport {\n  address,\n  getParcelSaturation,\n  getParcelColor,\n  getBlockCoordinate,\n  findParcel\n} from '../../utils/parcel';\n\ntype BlockDataResultPromiseCache = {\n  [key: string]: Promise<BlockDataResult>\n}\n\nconst getBlockPromise = (\n  x: number,\n  y: number,\n  apolloClient: ApolloClient<object>,\n  cache: BlockDataResultPromiseCache): Promise<BlockDataResult> =>\n{\n\n  const blockCoordinate = getBlockCoordinate(x, y);\n\n  (window as any).getBlockCoordinate = getBlockCoordinate\n\n  const variables: BlockDataQueryVariables = {\n    first: AppConfig.ParcelsPerQuery,\n    xGte: blockCoordinate.x,\n    xLt: blockCoordinate.x + AppConfig.ParcelBlockWidth,\n    yLte: blockCoordinate.y,\n    yGt: blockCoordinate.y - AppConfig.ParcelBlockWidth,\n  }\n\n  let promise: Promise<BlockDataResult>;\n\n  let blockKey = `${blockCoordinate.x},${blockCoordinate.y}`\n\n  if(blockKey in cache)\n  {\n    promise = cache[blockKey]\n  }\n  else\n  {\n    promise = apolloClient.query({\n          query: getBlockDataQuery,\n          errorPolicy: `all`,\n          variables,\n          // context?: any;\n          // fetchPolicy?: FetchPolicy;\n          // pollInterval?: number;\n          // notifyOnNetworkStatusChange?: boolean;\n          // returnPartialData?: boolean;\n          // partialRefetch?: boolean;\n          // canonizeResults?: boolean;\n      })\n\n    cache[blockKey] = promise\n  }\n\n  return promise\n\n}\n\ntype CanvasParcelGridProps = React.PropsWithChildren<{\n  size: Dimensions;\n  origin: Coordinate;\n  parcelSize: number;\n  selectedParcel: Parcel|null;\n  setSelectedParcel: (value: Parcel|null) => void;\n}>\n\nconst CanvasParcelGrid: FC<CanvasParcelGridProps> = ({\n  size,\n  origin,\n  parcelSize,\n  selectedParcel: _selectedParcel,\n  setSelectedParcel: _setSelectedParcel,\n}) => {\n\n  const canvasRef = React.useRef<HTMLCanvasElement>(null)\n\n  const originRef = React.useRef<Coordinate>(origin)\n  const parcelSizeRef = React.useRef<number>(parcelSize)\n\n  const selectedParcelRef = React.useRef<Parcel|null>(_selectedParcel)\n  const setSelectedParcelRef = React.useRef<(parcel: Parcel|null) => void>(_setSelectedParcel)\n\n  React.useEffect(() => {\n    originRef.current = origin\n  }, [origin])\n\n  React.useEffect(() => {\n    parcelSizeRef.current = parcelSize\n  }, [parcelSize])\n\n  React.useEffect(() => {\n    selectedParcelRef.current = _selectedParcel\n  }, [_selectedParcel])\n\n  React.useEffect(() => {\n    setSelectedParcelRef.current = _setSelectedParcel\n  }, [_setSelectedParcel])\n\n  const [context, setContext] = React.useState<CanvasRenderingContext2D|null>(null)\n\n  const apolloClient = useApolloClient()\n\n  const cache: BlockDataResultPromiseCache = React.useMemo(() => ({}), [])\n\n  const drawParcels = React.useCallback(() => {\n\n    if(canvasRef.current === null || context === null)\n    {\n      return\n    }\n\n    const canvas = canvasRef.current\n\n    const { width, height } = canvas\n\n    context.clearRect(0, 0, width, height)\n\n    const rowCount = Math.ceil(size.height / parcelSize)\n    const columnCount = Math.ceil(size.width / parcelSize)\n\n    for(let rowIndex = 0; rowIndex < rowCount; rowIndex++) {\n      for(let columnIndex = 0; columnIndex < columnCount; columnIndex++) {\n\n        let x = columnIndex + originRef.current.x\n        let y = originRef.current.y - rowIndex\n\n        let capturedOrigin = originRef.current\n        let capturedParcelSize = parcelSizeRef.current\n\n        getBlockPromise(x, y, apolloClient, cache)\n\n          .then(({ data: block, error, loading }: BlockDataResult) => {\n\n              if(JSON.stringify(capturedOrigin) !== JSON.stringify(originRef.current)) {\n                return;\n              }\n\n              if(capturedParcelSize !== parcelSizeRef.current) {\n                return;\n              }\n\n              let parcel: Parcel|undefined;\n\n              let color: Color = [0, 0, 0, 255];\n\n              if(loading) {\n\n                color = [248, 248, 255, 0.4]\n\n              } else if(error) {\n\n                color = [240, 128, 128, 0.4]\n\n              } else {\n\n                parcel = findParcel(block || { parcels: []}, x, y)\n\n                if(parcel)\n                {\n                  let [r, g, b, a] = getParcelColor(\n                    parcel,\n                    selectedParcelRef.current,\n                    address(parcel)\n                  )\n\n                  r = r / 256\n                  g = g / 256\n                  b = b / 256\n\n                  let desaturation = 1.0 - getParcelSaturation(parcel, selectedParcelRef.current)\n\n                  let luma = 0.3 * r + 0.6 * g + 0.1 * b;\n\n                  color = [\n                    (r + desaturation * (luma - r)) * 256,\n                    (g + desaturation * (luma - g)) * 256,\n                    (b + desaturation * (luma - b)) * 256,\n                    a,\n                  ]\n\n                }\n\n              }\n\n              let size = parcelSizeRef.current\n              let pixelX = columnIndex * size\n              let pixelY = rowIndex * size\n\n              context.fillStyle = `rgba(${color.join(`,`)})`\n              context.fillRect(pixelX, pixelY, size, size)\n\n              // let blockCoordinate = getBlockCoordinate(x, y)\n\n              // let text = `${x},${y}`\n              // let text = `${blockCoordinate.x},${blockCoordinate.y}`\n\n              // context.fillStyle = `yellow`\n              // context.fillText(text, pixelX, pixelY)\n\n            })\n\n      }\n    }\n\n  }, [\n    apolloClient,\n    cache,\n    parcelSize,\n    context,\n    size,\n    // parcelSizeRef.current,\n    // originRef.current,\n    // selectedParcelRef.current\n  ])\n\n  const drawParcelsRef = React.useRef(drawParcels)\n\n  React.useEffect(() => {\n    drawParcelsRef.current = drawParcels\n  }, [drawParcels])\n\n  const handleMouseMove = React.useCallback((event: React.MouseEvent<HTMLCanvasElement>) => {\n\n    let canvasX = event.pageX - event.currentTarget.offsetLeft;\n    let canvasY = event.pageY - event.currentTarget.offsetTop;\n\n    let atlasX = Math.floor(canvasX / parcelSize)\n    let atlasY = Math.floor(canvasY / parcelSize)\n\n    let x = atlasX + originRef.current.x\n    let y = originRef.current.y - atlasY\n\n    let capturedOrigin = originRef.current\n    let capturedParcelSize = parcelSizeRef.current\n\n    getBlockPromise(x, y, apolloClient, cache)\n\n      .then((result: BlockDataResult) => {\n\n          if(JSON.stringify(capturedOrigin) !== JSON.stringify(originRef.current)) {\n            return;\n          }\n\n          if(capturedParcelSize !== parcelSizeRef.current) {\n            return;\n          }\n\n          const { data: block, error, loading } = result\n\n          const parcel = findParcel(block || { parcels: []}, x, y)\n\n          if(parcel)\n          {\n            setSelectedParcelRef.current(parcel)\n          }\n          else\n          {\n            setSelectedParcelRef.current(null)\n          }\n\n          window.setTimeout(() => {\n            drawParcelsRef.current()\n          })\n\n        })\n\n  }, [\n    apolloClient,\n    cache,\n    parcelSize,\n    // canvasRef.current,\n    // originRef.current,\n    // parcelSizeRef.current,\n    // selectedParcelRef.current,\n  ])\n\n  React.useEffect(function setCanvasContext() {\n\n    const canvas = canvasRef.current;\n\n    const contextSettings: CanvasRenderingContext2DSettings = {\n      // alpha: false,\n      // colorSpace: PredefinedColorSpace,\n      desynchronized: false,\n      willReadFrequently: false,\n    }\n\n    let context: CanvasRenderingContext2D|null;\n\n    if(canvas === null) {\n\n      setContext(null)\n\n    } else {\n\n      context = canvas.getContext(\n        '2d',\n        contextSettings\n      ) as CanvasRenderingContext2D\n\n      setContext(context)\n    }\n\n  }, [\n    // canvasRef.current,\n    setContext,\n  ])\n\n  React.useEffect(\n    drawParcels,\n    [\n      drawParcels,\n      context,\n      size,\n      parcelSizeRef.current,\n      originRef.current,\n    ]\n  )\n\n  return (\n    <nav className={`CanvasParcelGrid ${css({\n      position: `fixed`,\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0,\n      zIndex: -1,\n      backgroundColor: `black`,\n      width: `${size.width}px`,\n      height: `${size.height}px`,\n      '&:hover': {\n        cursor: `pointer`,\n      },\n    })}`} data-testid=\"CanvasParcelGrid\">\n\n      <canvas ref={canvasRef}\n        width={size.width} height={size.height}\n        onMouseMove={(e) => handleMouseMove(e)}\n        className={css({\n          width: `${size.width}px`,\n          height: `${size.height}px`,\n        })} />\n\n\t  </nav>\n  )\n\n}\n\n// CanvasParcelGrid.displayName = `CanvasParcelGrid`\n\nexport default CanvasParcelGrid;\n","export const DAOContractAddress = `0x9a6ebe7e2a7722f8200d0ffb63a1f6406a0d7dce`\n\n// const ETH_DEAD_ADDRESS = `0x000000000000000000000000000000000000dEaD`\n","import React, { FC } from 'react';\n\nimport Parcel from '../../types/parcel';\n\nimport { shortenAddress } from '../../utils/address';\n\nimport styles from './ParcelDetails.module.scss';\n\ntype ParcelDetailsProps = React.PropsWithChildren<{\n  parcel: Parcel;\n}>\n\nconst ParcelDetails: FC<ParcelDetailsProps> = ({ parcel }) => {\n\n  return (\n    <ul className={styles.ParcelDetails} data-testid=\"ParcelDetails\">\n\n      <li key='owner'>\n        Owner:\n        {shortenAddress(parcel.owner.address)}\n      </li>\n\n      <li key='coordinate'>\n        Coordinate:\n        {parcel.x}, {parcel.y}\n      </li>\n\n      {\n        parcel.estate &&\n        <li key='estate'>\n          Estate:\n          {parcel.estate.owner.address}\n        </li>\n      }\n\n      {\n        parcel.data?.name &&\n        <li key='name'>\n          Name:\n          {parcel.data?.name}\n        </li>\n      }\n\n      {\n        parcel.data?.description &&\n        <li key='description'>\n          Description:\n          {parcel.data?.description}\n        </li>\n      }\n\n      {\n        parcel.data?.ipns &&\n        <li key='ipns'>\n          IPNS:\n          <a href={parcel.data?.ipns} target='_blank' rel='noreferrer'>\n            {parcel.data?.ipns}\n          </a>\n        </li>\n      }\n\n  </ul>\n  )\n\n}\n\nexport default ParcelDetails;\n","import React from 'react'\n\nimport type { NextPage } from 'next'\n\nimport {\n\tBox,\n\tPopover,\n\t// PopoverTrigger,\n\tPopoverAnchor,\n\tPopoverContent,\n\tPopoverHeader,\n\tPopoverBody,\n\tPopoverArrow,\n\tPopoverCloseButton,\n\tuseBoolean,\n  } from '@chakra-ui/react'\n\nimport { useEthers } from '@usedapp/core'\n\nimport Parcel from '../types/parcel'\nimport ITokenMetadata from '../types/token'\n\nimport AppConfig from '../config/app-config'\n\nimport useScreenDimensions from '../hooks/use-screen-dimensions'\nimport useMouseCoordinates from '../hooks/use-mouse-coordinates'\nimport useMousewheelScalable from '../hooks/use-mousewheel-scalable'\nimport useControlledCoordinate from '../hooks/use-controlled-coordinate'\n\nimport TokenBalance from '../components/TokenBalance/TokenBalance'\nimport ConnectToWalletButton from '../components/ConnectToWalletButton/ConnectToWalletButton'\nimport CanvasParcelGrid from '../components/CanvasParcelGrid/CanvasParcelGrid'\nimport ParcelDetails from '../components/ParcelDetails/ParcelDetails'\n\nimport { shortenAddress } from '../utils/address'\n\n// See: https://etherscan.io/token/0x0f5d2fb29fb7d3cfee444a200298f468908cc942\nconst MANA: ITokenMetadata = {\n\tname: 'Decentraland',\n\tsymbol: 'MANA',\n\taddress: '0x0f5d2fb29fb7d3cfee444a200298f468908cc942',\n\tdecimals: 18,\n}\n\n// import styles from './index.module.scss'\n\nconst Index: NextPage = () => {\n\n\tconst { account: address } = useEthers()\n\n\tconst screenDimensions = useScreenDimensions()\n\n\tconst parcelCellSize = useMousewheelScalable(AppConfig.ParcelPixelWidth, {\n\t\tdelta: 1,\n\t\tminValue: AppConfig.ParcelPixelMinWidth,\n\t\tmaxValue: AppConfig.ParcelPixelMaxWidth,\n\t})\n\n\tconst origin = useControlledCoordinate(AppConfig.Origin)\n\n\tconst [selectedParcel, setSelectedParcel] = React.useState<Parcel|null>(null)\n\n\tconst mouseCoordinates = useMouseCoordinates()\n\n\tconst [isParcelPopoverOpen, setIsParcelPopoverOpen] = useBoolean()\n\n\tconst onDidClickCanvas = React.useCallback(\n\t\t() => {\n\t\t\tisParcelPopoverOpen ?\n\t\t\tsetIsParcelPopoverOpen.off() :\n\t\t\tsetIsParcelPopoverOpen.on()\n\t\t\t// setIsParcelPopoverOpen(!isParcelPopoverOpen)\n\t\t},\n\t\t[\n\t\t\tisParcelPopoverOpen,\n\t\t\tsetIsParcelPopoverOpen,\n\t\t]\n\t)\n\n\t// const onOpenWrapper = React.useCallback(\n\t// \t() => {\n\t// \t\tsetIsParcelPopoverOpen.on()\n\t// \t},\n\t// \t[setIsParcelPopoverOpen]\n\t// )\n\n\t// const onCloseWrapper = React.useCallback(\n\t// \t() => {\n\t// \t\tsetIsParcelPopoverOpen.off()\n\t// \t},\n\t// \t[setIsParcelPopoverOpen]\n\t// )\n\n\treturn (\n\t\t<>\n\n\t\t\t<header data-theme=\"dark\">\n\t\t\t\t{\n\t\t\t\t\t!address &&\n\t\t\t\t\t<ConnectToWalletButton />\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\taddress &&\n\t\t\t\t\t<TokenBalance token={MANA} address={address} />\n\t\t\t\t}\n\t\t\t</header>\n\n\t\t\t<main>\n\n\t\t\t\t{/* <div onClick={onDidClickCanvas}></div> */}\n\n\t\t\t\t{\n\t\t\t\t\t<Popover\n\t\t\t\t\t\tisOpen={isParcelPopoverOpen}\n\t\t\t\t\t\t// onOpen={onOpenWrapper}\n\t\t\t\t\t\t// onClose={onCloseWrapper}\n\t\t\t\t\t\t// isLazy={true}\n\t\t\t\t\t\t// lazyBehavior='keepMounted'\n\t\t\t\t\t\t>\n\n\t\t\t\t\t\t{/* <PopoverTrigger> */}\n\t\t\t\t\t\t\t<Box onClick={onDidClickCanvas}>\n\t\t\t\t\t\t\t\t<CanvasParcelGrid\n\t\t\t\t\t\t\t\t\tsize={screenDimensions}\n\t\t\t\t\t\t\t\t\torigin={origin}\n\t\t\t\t\t\t\t\t\tparcelSize={parcelCellSize}\n\t\t\t\t\t\t\t\t\tselectedParcel={selectedParcel}\n\t\t\t\t\t\t\t\t\tsetSelectedParcel={setSelectedParcel}>\n\t\t\t\t\t\t\t\t</CanvasParcelGrid>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t{/* </PopoverTrigger> */}\n\n\t\t\t\t\t\t<PopoverAnchor>\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\t\t\t\ttop: selectedParcel ?\n\t\t\t\t\t\t\t\t\t\t// (origin.y - selectedParcel.y) * parcelCellSize :\n\t\t\t\t\t\t\t\t\t\tmouseCoordinates.y + 15 :\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\tleft: selectedParcel ?\n\t\t\t\t\t\t\t\t\t\t// (selectedParcel.x - origin.x) * parcelCellSize :\n\t\t\t\t\t\t\t\t\t\tmouseCoordinates.x - 0 :\n\t\t\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t\twidth: 0,\n\t\t\t\t\t\t\t\t\theight: 0,\n\t\t\t\t\t\t\t\t\topacity: 0,\n\t\t\t\t\t\t\t\t}}>\n\t\t\t\t\t\t\t\tClick Me\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</PopoverAnchor>\n\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tselectedParcel &&\n\t\t\t\t\t\t\t<PopoverContent>\n\n\t\t\t\t\t\t\t\t<PopoverArrow />\n\t\t\t\t\t\t\t\t<PopoverCloseButton />\n\n\t\t\t\t\t\t\t\t<PopoverHeader>\n\t\t\t\t\t\t\t\t\tParcel {shortenAddress(selectedParcel.id.substring(7))}\n\t\t\t\t\t\t\t\t</PopoverHeader>\n\n\t\t\t\t\t\t\t\t<PopoverBody>\n\t\t\t\t\t\t\t\t\t<ParcelDetails parcel={selectedParcel} />\n\t\t\t\t\t\t\t\t</PopoverBody>\n\n\t\t\t\t\t\t\t</PopoverContent>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</Popover>\n\t\t\t\t}\n\n\t\t\t</main>\n\n\t\t</>\n\t)\n\n}\n\nexport default Index\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ConnectToWalletButton\":\"ConnectToWalletButton_ConnectToWalletButton__v1hPl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TokenBalance\":\"TokenBalance_TokenBalance__PokCX\",\"TokenBalanceWrapper\":\"TokenBalance_TokenBalanceWrapper__tweM1\",\"TokenBalanceLeft\":\"TokenBalance_TokenBalanceLeft__Wfz6G\",\"TokenBalanceRight\":\"TokenBalance_TokenBalanceRight__wk_6T\",\"TokenBalanceSpan\":\"TokenBalance_TokenBalanceSpan__zo9uR\",\"TokenBalanceJazziconWrapper\":\"TokenBalance_TokenBalanceJazziconWrapper__QVyO0\"};"],"names":["window","__NEXT_P","push","ParcelPixelWidth","ParcelPixelMinWidth","ParcelPixelMaxWidth","ParcelBlockWidth","ParcelsPerQuery","Origin","x","y","PanningStep","React","width","innerWidth","height","innerHeight","screenDimensions","setScreenDimensions","onWindowResize","addEventListener","removeEventListener","mouseCoordinates","setMouseCoordinates","onMousemove","e","clientX","clientY","clamp","value","min","Infinity","max","Math","initialValue","options","delta","scalableValue","setScalableValue","onMouseWheel","event","clampedValue","deltaY","minValue","maxValue","coord","coordinate","setCoordiante","onKeydown","step","AppConfig","key","tokenAddress","address","result","useCall","contract","Contract","ERC20Interface","method","args","undefined","error","balance","shortenAddress","length","slice","start","end","token","useTokenBalance","div","p","formattedTokenBalance","formatUnits","decimals","className","styles","Jazzicon","diameter","seed","jsNumberForAddress","span","symbol","useEthers","activateBrowserWallet","useNotifications","notifications","connectWallet","then","console","log","map","n","type","addr","Button","colorScheme","onClick","gql","getBlockCoordinate","findParcel","block","parcels","find","parseInt","getBlockPromise","apolloClient","cache","blockCoordinate","promise","variables","first","xGte","xLt","yLte","yGt","blockKey","query","getBlockDataQuery","errorPolicy","size","origin","parcelSize","selectedParcel","setSelectedParcel","canvasRef","originRef","parcelSizeRef","selectedParcelRef","_selectedParcel","setSelectedParcelRef","_setSelectedParcel","current","context","setContext","useApolloClient","drawParcels","columnIndex","rowIndex","capturedOrigin","capturedParcelSize","data","loading","JSON","stringify","parcel","color","getParcelColor","estate","owner","r","g","b","a","desaturation","hasSameOwner","getParcelSaturation","luma","pixelX","pixelY","fillStyle","join","fillRect","columnCount","canvas","clearRect","rowCount","ceil","drawParcelsRef","handleMouseMove","canvasX","pageX","currentTarget","offsetLeft","canvasY","pageY","offsetTop","atlasX","floor","atlasY","setTimeout","getContext","desynchronized","willReadFrequently","nav","css","position","top","left","right","bottom","zIndex","backgroundColor","cursor","data-testid","ref","onMouseMove","ul","li","name","description","ipns","href","target","rel","MANA","account","useScreenDimensions","parcelCellSize","useMousewheelScalable","useControlledCoordinate","useMouseCoordinates","useBoolean","isParcelPopoverOpen","setIsParcelPopoverOpen","onDidClickCanvas","off","on","header","data-theme","ConnectToWalletButton","TokenBalance","main","Popover","isOpen","Box","CanvasParcelGrid","PopoverAnchor","button","style","opacity","PopoverContent","PopoverArrow","PopoverCloseButton","PopoverHeader","id","substring","PopoverBody","ParcelDetails","module","exports"],"sourceRoot":""}